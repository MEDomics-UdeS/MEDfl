Search.setIndex({"docnames": ["Documentation", "Installation", "Medfl", "Medfl.LearningManager", "Medfl.NetManager", "configuration_file", "index", "modules", "tutorials"], "filenames": ["Documentation.rst", "Installation.rst", "Medfl.rst", "Medfl.LearningManager.rst", "Medfl.NetManager.rst", "configuration_file.rst", "index.rst", "modules.rst", "tutorials.rst"], "titles": ["Documentation", "Installation", "Medfl package", "Medfl.LearningManager package", "Medfl.NetManager package", "Configuration File", "Welcome to the MEDfl documentation!", "Medfl", "Introduction"], "terms": {"we": [0, 1, 8], "us": [0, 3, 4, 5, 8], "sphinx": 0, "creat": [0, 1, 2, 3, 4, 5, 6, 8], "thi": [0, 1, 3, 6, 8], "project": [0, 8], "you": [0, 1, 5, 8], "can": [0, 1, 5, 8], "gener": [0, 8], "host": [0, 5], "local": [0, 3, 4, 5, 8], "compil": 0, "sourc": [0, 3, 4, 6], "code": [0, 4], "cd": [0, 1], "doc": 0, "make": [0, 8], "clean": 0, "html": 0, "Then": 0, "open": [0, 6, 8], "_build": 0, "python": [0, 6, 8], "m": 0, "http": [0, 1, 8], "server": [0, 2, 7, 8], "The": [1, 3, 4, 5, 8], "medfl": [1, 5, 8], "requir": [1, 3], "3": [1, 5, 8], "9": 1, "more": 1, "run": [1, 2, 3, 8], "If": [1, 3, 4], "don": 1, "t": 1, "have": [1, 3, 8], "your": [1, 3, 5, 8], "machin": [1, 8], "check": [1, 4], "out": 1, "follow": [1, 8], "link": 1, "It": [1, 6, 8], "also": [1, 5, 8], "databas": [1, 3, 4, 5, 6], "For": 1, "now": 1, "git": 1, "clone": 1, "github": 1, "com": 1, "medom": 1, "ud": 1, "pip": 1, "e": 1, "connect": [1, 4, 5, 8], "i": [1, 3, 4, 5, 6, 8], "order": [1, 8], "allow": [1, 8], "user": [1, 5, 8], "work": [1, 6, 8], "own": 1, "tabular": [1, 6], "dataset": [1, 2, 3, 6, 7, 8], "bash": 1, "script": [1, 5], "phpmyadmin": [1, 8], "monitor": [1, 8], "system": [1, 8], "command": 1, "chang": 1, "credenti": 1, "base": [1, 3, 4, 8], "py": [1, 5], "file": [1, 3, 4, 6, 8], "sudo": 1, "setup_mysql": 1, "sh": 1, "learningmanag": [2, 5, 7, 8], "submodul": [2, 7], "client": [2, 7, 8], "flowercli": [2, 3], "cid": [2, 3], "local_model": [2, 3], "trainload": [2, 3], "valload": [2, 3], "diff_priv": [2, 3], "__init__": [2, 3, 4], "context": [2, 3], "evalu": [2, 3], "fit": [2, 3], "get_paramet": [2, 3], "valid": [2, 3, 4, 8], "dynamicmod": [2, 7], "dynamicmodel": [2, 3, 8], "create_binary_classifi": [2, 3], "create_convolutional_neural_network": [2, 3], "create_linear_regressor": [2, 3], "create_logistic_regressor": [2, 3], "create_lstm_network": [2, 3], "create_model": [2, 3], "create_multiclass_classifi": [2, 3], "create_recurrent_neural_network": [2, 3], "federated_dataset": [2, 7], "federateddataset": [2, 3, 4], "updat": [2, 3, 4, 5], "flpipelin": [2, 4, 7], "name": [2, 3, 4], "descript": [2, 3, 4], "auto_test": [2, 3], "delet": [2, 3, 4], "test_by_nod": [2, 3], "create_queri": [2, 3], "model": [2, 5, 6, 7], "optim": [2, 3, 5, 8], "criterion": [2, 3], "load_model": [2, 3], "save_model": [2, 3], "set_paramet": [2, 3], "train": [2, 3, 4, 8], "plot": [2, 7], "accuracylossplott": [2, 3], "results_dict": [2, 3], "paramet": [2, 3, 4, 8], "metric": [2, 3], "iter": [2, 3], "plot_accuracy_loss": [2, 3], "plot_classification_report": [2, 3], "plot_confusion_matrix_by_nod": [2, 3], "plot_global_confusion_matrix": [2, 3], "flowerserv": [2, 3], "global_model": [2, 3], "strategi": [2, 4, 7, 8], "num_round": [2, 3, 5], "num_client": [2, 3], "fed_dataset": [2, 3], "accuraci": [2, 3], "loss": [2, 3], "flower_cli": [2, 3], "client_fn": [2, 3], "fraction_fit": [2, 3], "fraction_evalu": [2, 3], "min_fit_cli": [2, 3], "min_evaluate_cli": [2, 3], "min_available_cli": [2, 3], "initial_paramet": [2, 3], "util": [2, 4, 7, 8], "custom_classification_report": [2, 3], "empty_db": [2, 3], "get_node_confusion_matrix": [2, 3], "get_pipeline_confusion_matrix": [2, 3], "get_pipeline_from_nam": [2, 3], "get_pipeline_result": [2, 3], "test": [2, 3, 4, 5], "netmanag": [2, 6, 7], "delete_dataset": [2, 4], "list_alldataset": [2, 4], "update_data": [2, 4], "upload_dataset": [2, 4], "flsetup": [2, 3, 7, 8], "create_dataloader_from_nod": [2, 4], "create_federated_dataset": [2, 4], "create_nodes_from_master_dataset": [2, 4], "get_fldataset": [2, 4], "list_allsetup": [2, 4], "read_setup": [2, 4], "net_help": [2, 7], "get_feddataset_id_from_nam": [2, 4], "get_flpipeline_from_nam": [2, 4], "get_flsetupid_from_nam": [2, 4], "get_netid_from_nam": [2, 4], "get_nodeid_from_nam": [2, 4], "is_str": [2, 4], "master_table_exist": [2, 4], "process_data_after_read": [2, 4], "process_eicu": [2, 4], "net_manager_queri": [2, 7], "network": [2, 3, 7, 8], "mtable_exist": [2, 4], "add_nod": [2, 4], "create_master_dataset": [2, 4], "create_network": [2, 4], "delete_network": [2, 4], "list_allnetwork": [2, 4], "list_allnod": [2, 4], "update_network": [2, 4], "use_network": [2, 4], "node": [2, 3, 7, 8], "test_fract": [2, 4], "assign_dataset": [2, 4], "check_dataset_compat": [2, 4], "create_nod": [2, 4], "delete_nod": [2, 4], "get_dataset": [2, 4], "unassign_dataset": [2, 4], "update_nod": [2, 4], "class": [3, 4, 8], "str": [3, 4], "dataload": [3, 4], "bool": [3, 4], "true": [3, 4, 5, 8], "numpycli": 3, "id": [3, 4], "type": [3, 4], "feder": [3, 4, 6, 8], "learn": [3, 4, 6], "data": [3, 4, 8], "flag": [3, 4], "indic": [3, 4], "whether": [3, 4], "differenti": [3, 6, 8], "privaci": [3, 6, 8], "initi": [3, 4, 8], "instanc": [3, 4, 8], "config": [3, 5], "return": [3, 4], "receiv": 3, "from": [3, 4, 8], "configur": [3, 6, 8], "inform": [3, 4, 8], "number": 3, "exampl": 3, "tupl": 3, "current": 3, "numpi": 3, "arrai": 3, "object": [3, 4, 8], "variou": [3, 6, 8], "neural": [3, 8], "static": [3, 4], "input_dim": [3, 8], "hidden_dim": [3, 8], "output_dim": [3, 8], "activ": [3, 8], "relu": [3, 8], "dropout_r": [3, 8], "0": [3, 4, 5, 8], "batch_norm": [3, 8], "fals": [3, 4, 8], "use_gpu": [3, 8], "binari": [3, 8], "classifi": 3, "customiz": 3, "architectur": [3, 4, 8], "int": [3, 4], "dimens": [3, 8], "input": [3, 4, 8], "list": [3, 4, 8], "hidden": [3, 8], "layer": [3, 8], "output": [3, 4, 8], "option": [3, 4, 8], "function": 3, "default": [3, 4], "float": [3, 4], "dropout": 3, "rate": 3, "regular": 3, "appli": 3, "batch": [3, 4], "normal": 3, "gpu": 3, "acceler": 3, "pytorch": [3, 4], "torch": [3, 4], "nn": 3, "input_channel": [3, 8], "output_channel": [3, 8], "kernel_s": [3, 8], "convolut": 3, "cnn": [3, 8], "channel": 3, "size": [3, 4, 8], "kernel": 3, "linear": [3, 8], "regressor": 3, "logist": [3, 8], "input_s": [3, 8], "hidden_s": [3, 8], "long": 3, "short": 3, "term": 3, "memori": 3, "lstm": [3, 8], "model_typ": 3, "params_dict": [3, 4, 8], "specif": 3, "dynam": [3, 8], "given": [3, 4], "multiclass": [3, 8], "svm": 3, "recurr": 3, "autoencod": [3, 8], "dict": [3, 4], "dictionari": [3, 4], "contain": [3, 4, 8], "creation": [3, 4, 8], "rnn": [3, 8], "train_nod": [3, 4], "test_nod": [3, 4], "testload": 3, "repres": [3, 4], "loader": [3, 8], "flsetupid": [3, 4], "new": [3, 4, 8], "associ": [3, 4], "flpipeid": 3, "fedid": [3, 4], "flpipe": 3, "manag": [3, 6], "pipelin": [3, 4, 6, 8], "A": [3, 4], "self": [3, 4], "none": [3, 4], "specifi": [3, 4, 5, 8], "test_frac": [3, 4], "1": [3, 4, 5, 8], "automat": 3, "all": [3, 4, 8], "fraction": [3, 4], "classif": [3, 8], "report": 3, "result": [3, 6], "entri": 3, "string": [3, 4], "store": [3, 8], "its": [3, 8], "note": [3, 4], "placehold": 3, "method": [3, 4], "need": [3, 5], "implement": [3, 4], "setup": [3, 4, 8], "node_nam": 3, "attribut": [3, 4], "rais": [3, 4], "typeerror": [3, 4], "creation_d": 3, "callabl": 3, "val_load": 3, "devic": 3, "cpu": 3, "which": [3, 4, 8], "perform": [3, 8], "ndarrai": 3, "get": [3, 4, 8], "np": 3, "model_nam": 3, "load": 3, "save": 3, "except": 3, "an": [3, 4, 6, 8], "issu": 3, "dure": 3, "process": [3, 4, 8], "set": [3, 8], "train_load": 3, "epoch": 3, "privacy_engin": 3, "one": [3, 8], "engin": [3, 4], "enabl": [3, 8], "valu": [3, 4], "epsilon": [3, 5], "experi": 3, "organ": [3, 8], "uniqu": [3, 4], "rang": 3, "round": 3, "differ": [3, 8], "pipeline_nam": 3, "comparison": 3, "between": [3, 8], "confus": 3, "matrix": 3, "global": 3, "lr": [3, 5], "001": [3, 5], "adam": 3, "85": 3, "89": 3, "92": 3, "94": 3, "ellipsi": 3, "2": [3, 4, 5, 8], "15": 3, "08": 3, "01": 3, "sgd": [3, 5], "88": 3, "91": 3, "93": 3, "95": 3, "18": 3, "13": 3, "09": 3, "07": 3, "82": 3, "87": 3, "25": 3, "12": 3, "should": 3, "len": 3, "num": 3, "delta": [3, 5], "common": 3, "thing": 3, "aggreg": [3, 8], "diff_privaci": [3, 5], "client_resourc": 3, "num_cpu": 3, "num_gpu": 3, "central": 3, "flower": [3, 8], "among": 3, "commun": 3, "particip": 3, "each": [3, 8], "individu": 3, "server_round": 3, "ani": 3, "dtype": 3, "union": 3, "byte": 3, "fl": [3, 4, 8], "scalar": 3, "simul": [3, 6, 8], "histori": 3, "fedavg": 3, "evaluation_method": 3, "minimum": 3, "avail": 3, "start": 3, "parametr": 3, "distribut": 3, "y_true": 3, "y_pred": 3, "comput": 3, "custom": [3, 8], "includ": [3, 4], "sensit": 3, "precis": 3, "npv": 3, "f1": 3, "score": 3, "posit": 3, "like": [3, 8], "label": [3, 4], "predict": 3, "empti": [3, 4], "record": [3, 8], "multipl": 3, "tabl": [3, 4], "reset": 3, "auto": 3, "increment": 3, "counter": 3, "pipeline_id": 3, "datafram": [3, 4], "panda": [3, 4], "test_load": 3, "path": [4, 5], "csv": [4, 5, 8], "assum": 4, "pd": 4, "Not": 4, "yet": 4, "nodeid": 4, "upload": 4, "fill_strategi": 4, "mean": 4, "fit_encod": 4, "to_drop": 4, "train_batch_s": [4, 5], "32": [4, 5, 8], "test_batch_s": [4, 5], "split_frac": 4, "read": 4, "val_frac": 4, "featur": [4, 8], "master": [4, 5], "column_nam": 4, "column": 4, "masterdataset": [4, 5], "retriev": 4, "": [4, 8], "about": [4, 8], "classmethod": 4, "feddataset": 4, "found": 4, "flpipelineid": 4, "netnam": 4, "netid": 4, "nodenam": 4, "data_df": 4, "row": 4, "x": 4, "convert": 4, "accordingli": 4, "seri": 4, "exist": 4, "otherwis": 4, "after": 4, "encod": 4, "drop": 4, "tensordataset": 4, "imput": 4, "miss": 4, "eicu": 4, "fill": 4, "replac": 4, "nan": 4, "unknown": 4, "integ": 4, "add": 4, "path_to_csv": 4, "home": 4, "usherbrook": 4, "saho6810": 4, "notebook": [4, 8], "eicu_test": 4, "insert": 4, "rtype": 4, "network_nam": 4, "els": 4, "sqlalchemi": 4, "when": [4, 8], "dataset_nam": 4, "assign": [4, 8], "param": [4, 5, 8], "compat": 4, "belong": 4, "filter": 4, "unssign": 4, "In": [5, 8], "global_param": 5, "yaml": 5, "accord": 5, "base_url": 5, "path_to_project": 5, "ini": 5, "sql": [5, 8], "localhost": 5, "port": 5, "3306": 5, "your_usernam": 5, "password": 5, "your_password": 5, "create_db": 5, "mydb": 5, "connector": 5, "modifi": 5, "task": [5, 8], "binaryclassif": 5, "train_epoch": 5, "6": [5, 8], "max_grad_norm": 5, "20": 5, "1e": 5, "5": [5, 8], "min_evalcli": 5, "want": 5, "path_to_master_csv": 5, "TO": 5, "path_to_test_csv": 5, "packag": [6, 7, 8], "tool": [6, 8], "design": [6, 8], "incorpor": [6, 8], "empow": 6, "research": [6, 8], "develop": [6, 8], "effortlessli": 6, "execut": 6, "assess": 6, "while": [6, 8], "seamlessli": [6, 8], "instal": [6, 8], "introduct": 6, "transfer": 6, "choic": 6, "index": 6, "modul": [6, 7, 8], "search": 6, "page": 6, "subpackag": [7, 8], "content": 7, "hybrid": 8, "opacu": 8, "inspir": 8, "pysyft": 8, "framework": 8, "main": 8, "strength": 8, "both": 8, "developp": 8, "benifit": 8, "three": 8, "martin": 8, "ai": 8, "hi": 8, "interest": 8, "applic": 8, "healthcar": 8, "domain": 8, "recent": 8, "he": 8, "ha": 8, "reciev": 8, "call": 8, "prestigi": 8, "institut": 8, "studi": 8, "realis": 8, "goal": 8, "hospit": 8, "deep": 8, "preserv": 8, "patient": 8, "finish": 8, "first": 8, "analysi": 8, "statement": 8, "realiz": 8, "involv": 8, "within": 8, "good": 8, "storag": 8, "fortun": 8, "know": 8, "pretti": 8, "sure": 8, "do": 8, "desir": 8, "two": 8, "sub": 8, "let": 8, "u": 8, "expir": 8, "well": 8, "tutori": 8, "ll": 8, "demonstr": 8, "how": 8, "establish": 8, "subsequ": 8, "explor": 8, "step": 8, "piec": 8, "our": 8, "mysql": 8, "due": 8, "robust": 8, "reliabl": 8, "widespread": 8, "adopt": 8, "industri": 8, "Its": 8, "strong": 8, "support": 8, "structur": 8, "queri": 8, "languag": 8, "scalabl": 8, "ideal": 8, "divers": 8, "befor": 8, "begin": 8, "ensur": 8, "wamp": 8, "xampp": 8, "them": 8, "To": 8, "visual": 8, "www": 8, "net": 8, "web": 8, "conveni": 8, "find": 8, "repositori": 8, "respons": 8, "reli": 8, "leverag": 8, "ar": 8, "workflow": 8, "five": 8, "primari": 8, "integr": 8, "har": 8, "capabl": 8, "across": 8, "might": 8, "possess": 8, "pre": 8, "offer": 8, "advantag": 8, "enhanc": 8, "reduc": 8, "time": 8, "some": 8, "mai": 8, "lack": 8, "suffici": 8, "entir": 8, "scratch": 8, "hinder": 8, "abil": 8, "achiev": 8, "becom": 8, "viabl": 8, "maxim": 8, "benefit": 8, "previous": 8, "knowledg": 8, "serv": 8, "second": 8, "extend": 8, "oper": 8, "take": 8, "through": 8, "addition": 8, "relev": 8, "mainli": 8, "paradigm": 8, "mani": 8, "deal": 8, "homogen": 8, "purpos": 8, "analyz": 8, "compar": 8, "independ": 8, "holdout": 8, "final": 8, "extern": 8, "By": 8, "kei": 8, "provid": 8, "adapt": 8, "n": 8, "30": 8, "64": 8, "regress": 8, "4": 8, "16": 8, "10": 8, "7": 8, "8": 8, "encoder_hidden_s": 8, "As": 8, "part": 8, "align": 8, "deliv": 8, "access": 8, "effici": 8, "medic": 8, "focus": 8}, "objects": {"": [[2, 0, 0, "-", "Medfl"]], "Medfl": [[3, 0, 0, "-", "LearningManager"], [4, 0, 0, "-", "NetManager"]], "Medfl.LearningManager": [[3, 0, 0, "-", "client"], [3, 0, 0, "-", "dynamicModal"], [3, 0, 0, "-", "federated_dataset"], [3, 0, 0, "-", "flpipeline"], [3, 0, 0, "-", "model"], [3, 0, 0, "-", "plot"], [3, 0, 0, "-", "server"], [3, 0, 0, "-", "strategy"], [3, 0, 0, "-", "utils"]], "Medfl.LearningManager.client": [[3, 1, 1, "", "FlowerClient"]], "Medfl.LearningManager.client.FlowerClient": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "cid"], [3, 3, 1, "", "context"], [3, 3, 1, "", "diff_priv"], [3, 2, 1, "", "evaluate"], [3, 2, 1, "", "fit"], [3, 2, 1, "", "get_parameters"], [3, 3, 1, "", "local_model"], [3, 3, 1, "", "trainloader"], [3, 2, 1, "", "validate"], [3, 3, 1, "", "valloader"]], "Medfl.LearningManager.dynamicModal": [[3, 1, 1, "", "DynamicModel"]], "Medfl.LearningManager.dynamicModal.DynamicModel": [[3, 2, 1, "", "create_binary_classifier"], [3, 2, 1, "", "create_convolutional_neural_network"], [3, 2, 1, "", "create_linear_regressor"], [3, 2, 1, "", "create_logistic_regressor"], [3, 2, 1, "", "create_lstm_network"], [3, 2, 1, "", "create_model"], [3, 2, 1, "", "create_multiclass_classifier"], [3, 2, 1, "", "create_recurrent_neural_network"]], "Medfl.LearningManager.federated_dataset": [[3, 1, 1, "", "FederatedDataset"]], "Medfl.LearningManager.federated_dataset.FederatedDataset": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "create"], [3, 2, 1, "", "update"]], "Medfl.LearningManager.flpipeline": [[3, 1, 1, "", "FLpipeline"], [3, 4, 1, "", "create_query"]], "Medfl.LearningManager.flpipeline.FLpipeline": [[3, 2, 1, "", "auto_test"], [3, 2, 1, "", "create"], [3, 2, 1, "", "delete"], [3, 3, 1, "", "description"], [3, 3, 1, "", "name"], [3, 3, 1, "", "server"], [3, 2, 1, "", "test_by_node"], [3, 2, 1, "", "validate"]], "Medfl.LearningManager.model": [[3, 1, 1, "", "Model"]], "Medfl.LearningManager.model.Model": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "criterion"], [3, 2, 1, "", "evaluate"], [3, 2, 1, "", "get_parameters"], [3, 2, 1, "", "load_model"], [3, 3, 1, "", "model"], [3, 3, 1, "", "optimizer"], [3, 2, 1, "", "save_model"], [3, 2, 1, "", "set_parameters"], [3, 2, 1, "", "train"], [3, 2, 1, "", "validate"]], "Medfl.LearningManager.plot": [[3, 1, 1, "", "AccuracyLossPlotter"], [3, 5, 1, "", "results_dict"]], "Medfl.LearningManager.plot.AccuracyLossPlotter": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "iterations"], [3, 3, 1, "", "metrics"], [3, 3, 1, "", "parameters"], [3, 2, 1, "", "plot_accuracy_loss"], [3, 2, 1, "", "plot_classification_report"], [3, 2, 1, "", "plot_confusion_Matrix_by_node"], [3, 2, 1, "", "plot_global_confusion_matrix"], [3, 3, 1, "", "results_dict"]], "Medfl.LearningManager.server": [[3, 1, 1, "", "FlowerServer"]], "Medfl.LearningManager.server.FlowerServer": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "accuracies"], [3, 2, 1, "", "client_fn"], [3, 3, 1, "", "diff_priv"], [3, 2, 1, "", "evaluate"], [3, 3, 1, "", "fed_dataset"], [3, 3, 1, "", "flower_clients"], [3, 3, 1, "", "global_model"], [3, 3, 1, "", "losses"], [3, 3, 1, "", "num_clients"], [3, 3, 1, "", "num_rounds"], [3, 2, 1, "", "run"], [3, 3, 1, "", "strategy"], [3, 2, 1, "", "validate"]], "Medfl.LearningManager.strategy": [[3, 1, 1, "", "Strategy"]], "Medfl.LearningManager.strategy.Strategy": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "fraction_evaluate"], [3, 3, 1, "", "fraction_fit"], [3, 3, 1, "", "initial_parameters"], [3, 3, 1, "", "min_available_clients"], [3, 3, 1, "", "min_evaluate_clients"], [3, 3, 1, "", "min_fit_clients"], [3, 3, 1, "", "name"]], "Medfl.LearningManager.utils": [[3, 4, 1, "", "custom_classification_report"], [3, 4, 1, "", "empty_db"], [3, 4, 1, "", "get_node_confusion_matrix"], [3, 4, 1, "", "get_pipeline_confusion_matrix"], [3, 4, 1, "", "get_pipeline_from_name"], [3, 4, 1, "", "get_pipeline_result"], [3, 4, 1, "", "test"]], "Medfl.NetManager": [[4, 0, 0, "-", "dataset"], [4, 0, 0, "-", "flsetup"], [4, 0, 0, "-", "net_helper"], [4, 0, 0, "-", "net_manager_queries"], [4, 0, 0, "-", "network"], [4, 0, 0, "-", "node"]], "Medfl.NetManager.dataset": [[4, 1, 1, "", "DataSet"]], "Medfl.NetManager.dataset.DataSet": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "delete_dataset"], [4, 2, 1, "", "list_alldatasets"], [4, 2, 1, "", "update_data"], [4, 2, 1, "", "upload_dataset"], [4, 2, 1, "", "validate"]], "Medfl.NetManager.flsetup": [[4, 1, 1, "", "FLsetup"]], "Medfl.NetManager.flsetup.FLsetup": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "create"], [4, 2, 1, "", "create_dataloader_from_node"], [4, 2, 1, "", "create_federated_dataset"], [4, 2, 1, "", "create_nodes_from_master_dataset"], [4, 2, 1, "", "delete"], [4, 2, 1, "", "get_flDataSet"], [4, 2, 1, "", "list_allsetups"], [4, 2, 1, "", "read_setup"], [4, 2, 1, "", "validate"]], "Medfl.NetManager.net_helper": [[4, 4, 1, "", "get_feddataset_id_from_name"], [4, 4, 1, "", "get_flpipeline_from_name"], [4, 4, 1, "", "get_flsetupid_from_name"], [4, 4, 1, "", "get_netid_from_name"], [4, 4, 1, "", "get_nodeid_from_name"], [4, 4, 1, "", "is_str"], [4, 4, 1, "", "master_table_exists"], [4, 4, 1, "", "process_data_after_reading"], [4, 4, 1, "", "process_eicu"]], "Medfl.NetManager.network": [[4, 1, 1, "", "Network"]], "Medfl.NetManager.network.Network": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "add_node"], [4, 2, 1, "", "create_master_dataset"], [4, 2, 1, "", "create_network"], [4, 2, 1, "", "delete_network"], [4, 2, 1, "", "list_allnetworks"], [4, 2, 1, "", "list_allnodes"], [4, 3, 1, "", "mtable_exists"], [4, 3, 1, "", "name"], [4, 2, 1, "", "update_network"], [4, 2, 1, "", "use_network"], [4, 2, 1, "", "validate"]], "Medfl.NetManager.node": [[4, 1, 1, "", "Node"]], "Medfl.NetManager.node.Node": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "assign_dataset"], [4, 2, 1, "", "check_dataset_compatibility"], [4, 2, 1, "", "create_node"], [4, 2, 1, "", "delete_node"], [4, 2, 1, "", "get_dataset"], [4, 2, 1, "", "list_alldatasets"], [4, 2, 1, "", "list_allnodes"], [4, 3, 1, "", "name"], [4, 3, 1, "", "test_fraction"], [4, 3, 1, "", "train"], [4, 2, 1, "", "unassign_dataset"], [4, 2, 1, "", "update_node"], [4, 2, 1, "", "upload_dataset"], [4, 2, 1, "", "validate"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"]}, "titleterms": {"document": [0, 6], "instal": 1, "python": 1, "packag": [1, 2, 3, 4], "mysql": [1, 5], "db": 1, "configur": [1, 5], "medfl": [2, 3, 4, 6, 7], "subpackag": 2, "modul": [2, 3, 4], "content": [2, 3, 4, 6], "learningmanag": 3, "submodul": [3, 4], "client": 3, "dynamicmod": 3, "federated_dataset": 3, "flpipelin": 3, "model": [3, 8], "plot": 3, "server": 3, "strategi": 3, "util": 3, "netmanag": [4, 8], "dataset": [4, 5], "flsetup": 4, "net_help": 4, "net_manager_queri": 4, "network": 4, "node": 4, "file": 5, "project": 5, "base": 5, "url": 5, "learn": [5, 8], "paramet": 5, "welcom": 6, "get": 6, "start": 6, "tutori": 6, "indic": 6, "tabl": 6, "introduct": 8, "real": 8, "world": 8, "scenario": 8, "databas": 8, "manag": 8, "transfer": 8, "result": 8, "test": 8, "phase": 8, "choic": 8, "titl": 8}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Documentation": [[0, "documentation"]], "Installation": [[1, "installation"]], "Python installation": [[1, "python-installation"]], "Package Installation": [[1, "package-installation"]], "MySQL DB Configuration": [[1, "mysql-db-configuration"]], "Medfl package": [[2, "medfl-package"]], "Subpackages": [[2, "subpackages"]], "Module contents": [[2, "module-Medfl"], [3, "module-Medfl.LearningManager"], [4, "module-Medfl.NetManager"]], "Medfl.LearningManager package": [[3, "medfl-learningmanager-package"]], "Submodules": [[3, "submodules"], [4, "submodules"]], "Medfl.LearningManager.client module": [[3, "module-Medfl.LearningManager.client"]], "Medfl.LearningManager.dynamicModal module": [[3, "module-Medfl.LearningManager.dynamicModal"]], "Medfl.LearningManager.federated_dataset module": [[3, "module-Medfl.LearningManager.federated_dataset"]], "Medfl.LearningManager.flpipeline module": [[3, "module-Medfl.LearningManager.flpipeline"]], "Medfl.LearningManager.model module": [[3, "module-Medfl.LearningManager.model"]], "Medfl.LearningManager.plot module": [[3, "module-Medfl.LearningManager.plot"]], "Medfl.LearningManager.server module": [[3, "module-Medfl.LearningManager.server"]], "Medfl.LearningManager.strategy module": [[3, "module-Medfl.LearningManager.strategy"]], "Medfl.LearningManager.utils module": [[3, "module-Medfl.LearningManager.utils"]], "Medfl.NetManager package": [[4, "medfl-netmanager-package"]], "Medfl.NetManager.dataset module": [[4, "module-Medfl.NetManager.dataset"]], "Medfl.NetManager.flsetup module": [[4, "module-Medfl.NetManager.flsetup"]], "Medfl.NetManager.net_helper module": [[4, "module-Medfl.NetManager.net_helper"]], "Medfl.NetManager.net_manager_queries module": [[4, "module-Medfl.NetManager.net_manager_queries"]], "Medfl.NetManager.network module": [[4, "module-Medfl.NetManager.network"]], "Medfl.NetManager.node module": [[4, "module-Medfl.NetManager.node"]], "Configuration File": [[5, "configuration-file"]], "Project base url": [[5, "project-base-url"]], "MySQL Configuration": [[5, "mysql-configuration"]], "Learning Parameters": [[5, "learning-parameters"]], "DataSets": [[5, "datasets"]], "Welcome to the MEDfl documentation!": [[6, "welcome-to-the-medfl-documentation"]], "Getting started": [[6, null]], "Tutorials": [[6, null]], "Contents:": [[6, null]], "Indices and tables": [[6, "indices-and-tables"]], "Medfl": [[7, "medfl"]], "Introduction": [[8, "introduction"]], "Real world scenario": [[8, "real-world-scenario"]], "Database management": [[8, "database-management"]], "NetManager": [[8, "netmanager"]], "Transfer Learning": [[8, "transfer-learning"]], "Learning Manager": [[8, "learning-manager"]], "Learning Results": [[8, "learning-results"]], "Test Phases": [[8, "id2"]], "Model choice": [[8, "model-choice"]], "Title": [[8, "id3"]]}, "indexentries": {"medfl": [[2, "module-Medfl"]], "module": [[2, "module-Medfl"], [3, "module-Medfl.LearningManager"], [3, "module-Medfl.LearningManager.client"], [3, "module-Medfl.LearningManager.dynamicModal"], [3, "module-Medfl.LearningManager.federated_dataset"], [3, "module-Medfl.LearningManager.flpipeline"], [3, "module-Medfl.LearningManager.model"], [3, "module-Medfl.LearningManager.plot"], [3, "module-Medfl.LearningManager.server"], [3, "module-Medfl.LearningManager.strategy"], [3, "module-Medfl.LearningManager.utils"], [4, "module-Medfl.NetManager"], [4, "module-Medfl.NetManager.dataset"], [4, "module-Medfl.NetManager.flsetup"], [4, "module-Medfl.NetManager.net_helper"], [4, "module-Medfl.NetManager.net_manager_queries"], [4, "module-Medfl.NetManager.network"], [4, "module-Medfl.NetManager.node"]], "accuracylossplotter (class in medfl.learningmanager.plot)": [[3, "Medfl.LearningManager.plot.AccuracyLossPlotter"]], "dynamicmodel (class in medfl.learningmanager.dynamicmodal)": [[3, "Medfl.LearningManager.dynamicModal.DynamicModel"]], "flpipeline (class in medfl.learningmanager.flpipeline)": [[3, "Medfl.LearningManager.flpipeline.FLpipeline"]], "federateddataset (class in medfl.learningmanager.federated_dataset)": [[3, "Medfl.LearningManager.federated_dataset.FederatedDataset"]], "flowerclient (class in medfl.learningmanager.client)": [[3, "Medfl.LearningManager.client.FlowerClient"]], "flowerserver (class in medfl.learningmanager.server)": [[3, "Medfl.LearningManager.server.FlowerServer"]], "medfl.learningmanager": [[3, "module-Medfl.LearningManager"]], "medfl.learningmanager.client": [[3, "module-Medfl.LearningManager.client"]], "medfl.learningmanager.dynamicmodal": [[3, "module-Medfl.LearningManager.dynamicModal"]], "medfl.learningmanager.federated_dataset": [[3, "module-Medfl.LearningManager.federated_dataset"]], "medfl.learningmanager.flpipeline": [[3, "module-Medfl.LearningManager.flpipeline"]], "medfl.learningmanager.model": [[3, "module-Medfl.LearningManager.model"]], "medfl.learningmanager.plot": [[3, "module-Medfl.LearningManager.plot"]], "medfl.learningmanager.server": [[3, "module-Medfl.LearningManager.server"]], "medfl.learningmanager.strategy": [[3, "module-Medfl.LearningManager.strategy"]], "medfl.learningmanager.utils": [[3, "module-Medfl.LearningManager.utils"]], "model (class in medfl.learningmanager.model)": [[3, "Medfl.LearningManager.model.Model"]], "strategy (class in medfl.learningmanager.strategy)": [[3, "Medfl.LearningManager.strategy.Strategy"]], "__init__() (medfl.learningmanager.client.flowerclient method)": [[3, "Medfl.LearningManager.client.FlowerClient.__init__"]], "__init__() (medfl.learningmanager.federated_dataset.federateddataset method)": [[3, "Medfl.LearningManager.federated_dataset.FederatedDataset.__init__"]], "__init__() (medfl.learningmanager.model.model method)": [[3, "Medfl.LearningManager.model.Model.__init__"]], "__init__() (medfl.learningmanager.plot.accuracylossplotter method)": [[3, "Medfl.LearningManager.plot.AccuracyLossPlotter.__init__"]], "__init__() (medfl.learningmanager.server.flowerserver method)": [[3, "Medfl.LearningManager.server.FlowerServer.__init__"]], "__init__() (medfl.learningmanager.strategy.strategy method)": [[3, "Medfl.LearningManager.strategy.Strategy.__init__"]], "accuracies (medfl.learningmanager.server.flowerserver attribute)": [[3, "Medfl.LearningManager.server.FlowerServer.accuracies"]], "auto_test() (medfl.learningmanager.flpipeline.flpipeline method)": [[3, "Medfl.LearningManager.flpipeline.FLpipeline.auto_test"]], "cid (medfl.learningmanager.client.flowerclient attribute)": [[3, "Medfl.LearningManager.client.FlowerClient.cid"]], "client_fn() (medfl.learningmanager.server.flowerserver method)": [[3, "Medfl.LearningManager.server.FlowerServer.client_fn"]], "context (medfl.learningmanager.client.flowerclient attribute)": [[3, "Medfl.LearningManager.client.FlowerClient.context"]], "create() (medfl.learningmanager.federated_dataset.federateddataset method)": [[3, "Medfl.LearningManager.federated_dataset.FederatedDataset.create"]], "create() (medfl.learningmanager.flpipeline.flpipeline method)": [[3, "Medfl.LearningManager.flpipeline.FLpipeline.create"]], "create_binary_classifier() (medfl.learningmanager.dynamicmodal.dynamicmodel static method)": [[3, "Medfl.LearningManager.dynamicModal.DynamicModel.create_binary_classifier"]], "create_convolutional_neural_network() (medfl.learningmanager.dynamicmodal.dynamicmodel static method)": [[3, "Medfl.LearningManager.dynamicModal.DynamicModel.create_convolutional_neural_network"]], "create_linear_regressor() (medfl.learningmanager.dynamicmodal.dynamicmodel static method)": [[3, "Medfl.LearningManager.dynamicModal.DynamicModel.create_linear_regressor"]], "create_logistic_regressor() (medfl.learningmanager.dynamicmodal.dynamicmodel static method)": [[3, "Medfl.LearningManager.dynamicModal.DynamicModel.create_logistic_regressor"]], "create_lstm_network() (medfl.learningmanager.dynamicmodal.dynamicmodel static method)": [[3, "Medfl.LearningManager.dynamicModal.DynamicModel.create_lstm_network"]], "create_model() (medfl.learningmanager.dynamicmodal.dynamicmodel method)": [[3, "Medfl.LearningManager.dynamicModal.DynamicModel.create_model"]], "create_multiclass_classifier() (medfl.learningmanager.dynamicmodal.dynamicmodel static method)": [[3, "Medfl.LearningManager.dynamicModal.DynamicModel.create_multiclass_classifier"]], "create_query() (in module medfl.learningmanager.flpipeline)": [[3, "Medfl.LearningManager.flpipeline.create_query"]], "create_recurrent_neural_network() (medfl.learningmanager.dynamicmodal.dynamicmodel static method)": [[3, "Medfl.LearningManager.dynamicModal.DynamicModel.create_recurrent_neural_network"]], "criterion (medfl.learningmanager.model.model attribute)": [[3, "Medfl.LearningManager.model.Model.criterion"]], "custom_classification_report() (in module medfl.learningmanager.utils)": [[3, "Medfl.LearningManager.utils.custom_classification_report"]], "delete() (medfl.learningmanager.flpipeline.flpipeline method)": [[3, "Medfl.LearningManager.flpipeline.FLpipeline.delete"]], "description (medfl.learningmanager.flpipeline.flpipeline attribute)": [[3, "Medfl.LearningManager.flpipeline.FLpipeline.description"]], "diff_priv (medfl.learningmanager.client.flowerclient attribute)": [[3, "Medfl.LearningManager.client.FlowerClient.diff_priv"]], "diff_priv (medfl.learningmanager.server.flowerserver attribute)": [[3, "Medfl.LearningManager.server.FlowerServer.diff_priv"]], "empty_db() (in module medfl.learningmanager.utils)": [[3, "Medfl.LearningManager.utils.empty_db"]], "evaluate() (medfl.learningmanager.client.flowerclient method)": [[3, "Medfl.LearningManager.client.FlowerClient.evaluate"]], "evaluate() (medfl.learningmanager.model.model method)": [[3, "Medfl.LearningManager.model.Model.evaluate"]], "evaluate() (medfl.learningmanager.server.flowerserver method)": [[3, "Medfl.LearningManager.server.FlowerServer.evaluate"]], "fed_dataset (medfl.learningmanager.server.flowerserver attribute)": [[3, "Medfl.LearningManager.server.FlowerServer.fed_dataset"]], "fit() (medfl.learningmanager.client.flowerclient method)": [[3, "Medfl.LearningManager.client.FlowerClient.fit"]], "flower_clients (medfl.learningmanager.server.flowerserver attribute)": [[3, "Medfl.LearningManager.server.FlowerServer.flower_clients"]], "fraction_evaluate (medfl.learningmanager.strategy.strategy attribute)": [[3, "Medfl.LearningManager.strategy.Strategy.fraction_evaluate"]], "fraction_fit (medfl.learningmanager.strategy.strategy attribute)": [[3, "Medfl.LearningManager.strategy.Strategy.fraction_fit"]], "get_node_confusion_matrix() (in module medfl.learningmanager.utils)": [[3, "Medfl.LearningManager.utils.get_node_confusion_matrix"]], "get_parameters() (medfl.learningmanager.client.flowerclient method)": [[3, "Medfl.LearningManager.client.FlowerClient.get_parameters"]], "get_parameters() (medfl.learningmanager.model.model method)": [[3, "Medfl.LearningManager.model.Model.get_parameters"]], "get_pipeline_confusion_matrix() (in module medfl.learningmanager.utils)": [[3, "Medfl.LearningManager.utils.get_pipeline_confusion_matrix"]], "get_pipeline_from_name() (in module medfl.learningmanager.utils)": [[3, "Medfl.LearningManager.utils.get_pipeline_from_name"]], "get_pipeline_result() (in module medfl.learningmanager.utils)": [[3, "Medfl.LearningManager.utils.get_pipeline_result"]], "global_model (medfl.learningmanager.server.flowerserver attribute)": [[3, "Medfl.LearningManager.server.FlowerServer.global_model"]], "initial_parameters (medfl.learningmanager.strategy.strategy attribute)": [[3, "Medfl.LearningManager.strategy.Strategy.initial_parameters"]], "iterations (medfl.learningmanager.plot.accuracylossplotter attribute)": [[3, "Medfl.LearningManager.plot.AccuracyLossPlotter.iterations"]], "load_model() (medfl.learningmanager.model.model static method)": [[3, "Medfl.LearningManager.model.Model.load_model"]], "local_model (medfl.learningmanager.client.flowerclient attribute)": [[3, "Medfl.LearningManager.client.FlowerClient.local_model"]], "losses (medfl.learningmanager.server.flowerserver attribute)": [[3, "Medfl.LearningManager.server.FlowerServer.losses"]], "metrics (medfl.learningmanager.plot.accuracylossplotter attribute)": [[3, "Medfl.LearningManager.plot.AccuracyLossPlotter.metrics"]], "min_available_clients (medfl.learningmanager.strategy.strategy attribute)": [[3, "Medfl.LearningManager.strategy.Strategy.min_available_clients"]], "min_evaluate_clients (medfl.learningmanager.strategy.strategy attribute)": [[3, "Medfl.LearningManager.strategy.Strategy.min_evaluate_clients"]], "min_fit_clients (medfl.learningmanager.strategy.strategy attribute)": [[3, "Medfl.LearningManager.strategy.Strategy.min_fit_clients"]], "model (medfl.learningmanager.model.model attribute)": [[3, "Medfl.LearningManager.model.Model.model"]], "name (medfl.learningmanager.flpipeline.flpipeline attribute)": [[3, "Medfl.LearningManager.flpipeline.FLpipeline.name"]], "name (medfl.learningmanager.strategy.strategy attribute)": [[3, "Medfl.LearningManager.strategy.Strategy.name"]], "num_clients (medfl.learningmanager.server.flowerserver attribute)": [[3, "Medfl.LearningManager.server.FlowerServer.num_clients"]], "num_rounds (medfl.learningmanager.server.flowerserver attribute)": [[3, "Medfl.LearningManager.server.FlowerServer.num_rounds"]], "optimizer (medfl.learningmanager.model.model attribute)": [[3, "Medfl.LearningManager.model.Model.optimizer"]], "parameters (medfl.learningmanager.plot.accuracylossplotter attribute)": [[3, "Medfl.LearningManager.plot.AccuracyLossPlotter.parameters"]], "plot_accuracy_loss() (medfl.learningmanager.plot.accuracylossplotter method)": [[3, "Medfl.LearningManager.plot.AccuracyLossPlotter.plot_accuracy_loss"]], "plot_classification_report() (medfl.learningmanager.plot.accuracylossplotter static method)": [[3, "Medfl.LearningManager.plot.AccuracyLossPlotter.plot_classification_report"]], "plot_confusion_matrix_by_node() (medfl.learningmanager.plot.accuracylossplotter static method)": [[3, "Medfl.LearningManager.plot.AccuracyLossPlotter.plot_confusion_Matrix_by_node"]], "plot_global_confusion_matrix() (medfl.learningmanager.plot.accuracylossplotter static method)": [[3, "Medfl.LearningManager.plot.AccuracyLossPlotter.plot_global_confusion_matrix"]], "results_dict (medfl.learningmanager.plot.accuracylossplotter attribute)": [[3, "Medfl.LearningManager.plot.AccuracyLossPlotter.results_dict"]], "results_dict (in module medfl.learningmanager.plot)": [[3, "Medfl.LearningManager.plot.results_dict"]], "run() (medfl.learningmanager.server.flowerserver method)": [[3, "Medfl.LearningManager.server.FlowerServer.run"]], "save_model() (medfl.learningmanager.model.model static method)": [[3, "Medfl.LearningManager.model.Model.save_model"]], "server (medfl.learningmanager.flpipeline.flpipeline attribute)": [[3, "Medfl.LearningManager.flpipeline.FLpipeline.server"]], "set_parameters() (medfl.learningmanager.model.model method)": [[3, "Medfl.LearningManager.model.Model.set_parameters"]], "strategy (medfl.learningmanager.server.flowerserver attribute)": [[3, "Medfl.LearningManager.server.FlowerServer.strategy"]], "test() (in module medfl.learningmanager.utils)": [[3, "Medfl.LearningManager.utils.test"]], "test_by_node() (medfl.learningmanager.flpipeline.flpipeline method)": [[3, "Medfl.LearningManager.flpipeline.FLpipeline.test_by_node"]], "train() (medfl.learningmanager.model.model method)": [[3, "Medfl.LearningManager.model.Model.train"]], "trainloader (medfl.learningmanager.client.flowerclient attribute)": [[3, "Medfl.LearningManager.client.FlowerClient.trainloader"]], "update() (medfl.learningmanager.federated_dataset.federateddataset method)": [[3, "Medfl.LearningManager.federated_dataset.FederatedDataset.update"]], "validate() (medfl.learningmanager.client.flowerclient method)": [[3, "Medfl.LearningManager.client.FlowerClient.validate"]], "validate() (medfl.learningmanager.flpipeline.flpipeline method)": [[3, "Medfl.LearningManager.flpipeline.FLpipeline.validate"]], "validate() (medfl.learningmanager.model.model method)": [[3, "Medfl.LearningManager.model.Model.validate"]], "validate() (medfl.learningmanager.server.flowerserver method)": [[3, "Medfl.LearningManager.server.FlowerServer.validate"]], "valloader (medfl.learningmanager.client.flowerclient attribute)": [[3, "Medfl.LearningManager.client.FlowerClient.valloader"]], "dataset (class in medfl.netmanager.dataset)": [[4, "Medfl.NetManager.dataset.DataSet"]], "flsetup (class in medfl.netmanager.flsetup)": [[4, "Medfl.NetManager.flsetup.FLsetup"]], "medfl.netmanager": [[4, "module-Medfl.NetManager"]], "medfl.netmanager.dataset": [[4, "module-Medfl.NetManager.dataset"]], "medfl.netmanager.flsetup": [[4, "module-Medfl.NetManager.flsetup"]], "medfl.netmanager.net_helper": [[4, "module-Medfl.NetManager.net_helper"]], "medfl.netmanager.net_manager_queries": [[4, "module-Medfl.NetManager.net_manager_queries"]], "medfl.netmanager.network": [[4, "module-Medfl.NetManager.network"]], "medfl.netmanager.node": [[4, "module-Medfl.NetManager.node"]], "network (class in medfl.netmanager.network)": [[4, "Medfl.NetManager.network.Network"]], "node (class in medfl.netmanager.node)": [[4, "Medfl.NetManager.node.Node"]], "__init__() (medfl.netmanager.dataset.dataset method)": [[4, "Medfl.NetManager.dataset.DataSet.__init__"]], "__init__() (medfl.netmanager.flsetup.flsetup method)": [[4, "Medfl.NetManager.flsetup.FLsetup.__init__"]], "__init__() (medfl.netmanager.network.network method)": [[4, "Medfl.NetManager.network.Network.__init__"]], "__init__() (medfl.netmanager.node.node method)": [[4, "Medfl.NetManager.node.Node.__init__"]], "add_node() (medfl.netmanager.network.network method)": [[4, "Medfl.NetManager.network.Network.add_node"]], "assign_dataset() (medfl.netmanager.node.node method)": [[4, "Medfl.NetManager.node.Node.assign_dataset"]], "check_dataset_compatibility() (medfl.netmanager.node.node method)": [[4, "Medfl.NetManager.node.Node.check_dataset_compatibility"]], "create() (medfl.netmanager.flsetup.flsetup method)": [[4, "Medfl.NetManager.flsetup.FLsetup.create"]], "create_dataloader_from_node() (medfl.netmanager.flsetup.flsetup method)": [[4, "Medfl.NetManager.flsetup.FLsetup.create_dataloader_from_node"]], "create_federated_dataset() (medfl.netmanager.flsetup.flsetup method)": [[4, "Medfl.NetManager.flsetup.FLsetup.create_federated_dataset"]], "create_master_dataset() (medfl.netmanager.network.network method)": [[4, "Medfl.NetManager.network.Network.create_master_dataset"]], "create_network() (medfl.netmanager.network.network method)": [[4, "Medfl.NetManager.network.Network.create_network"]], "create_node() (medfl.netmanager.node.node method)": [[4, "Medfl.NetManager.node.Node.create_node"]], "create_nodes_from_master_dataset() (medfl.netmanager.flsetup.flsetup method)": [[4, "Medfl.NetManager.flsetup.FLsetup.create_nodes_from_master_dataset"]], "delete() (medfl.netmanager.flsetup.flsetup method)": [[4, "Medfl.NetManager.flsetup.FLsetup.delete"]], "delete_dataset() (medfl.netmanager.dataset.dataset method)": [[4, "Medfl.NetManager.dataset.DataSet.delete_dataset"]], "delete_network() (medfl.netmanager.network.network method)": [[4, "Medfl.NetManager.network.Network.delete_network"]], "delete_node() (medfl.netmanager.node.node method)": [[4, "Medfl.NetManager.node.Node.delete_node"]], "get_dataset() (medfl.netmanager.node.node method)": [[4, "Medfl.NetManager.node.Node.get_dataset"]], "get_feddataset_id_from_name() (in module medfl.netmanager.net_helper)": [[4, "Medfl.NetManager.net_helper.get_feddataset_id_from_name"]], "get_fldataset() (medfl.netmanager.flsetup.flsetup method)": [[4, "Medfl.NetManager.flsetup.FLsetup.get_flDataSet"]], "get_flpipeline_from_name() (in module medfl.netmanager.net_helper)": [[4, "Medfl.NetManager.net_helper.get_flpipeline_from_name"]], "get_flsetupid_from_name() (in module medfl.netmanager.net_helper)": [[4, "Medfl.NetManager.net_helper.get_flsetupid_from_name"]], "get_netid_from_name() (in module medfl.netmanager.net_helper)": [[4, "Medfl.NetManager.net_helper.get_netid_from_name"]], "get_nodeid_from_name() (in module medfl.netmanager.net_helper)": [[4, "Medfl.NetManager.net_helper.get_nodeid_from_name"]], "is_str() (in module medfl.netmanager.net_helper)": [[4, "Medfl.NetManager.net_helper.is_str"]], "list_alldatasets() (medfl.netmanager.dataset.dataset static method)": [[4, "Medfl.NetManager.dataset.DataSet.list_alldatasets"]], "list_alldatasets() (medfl.netmanager.node.node method)": [[4, "Medfl.NetManager.node.Node.list_alldatasets"]], "list_allnetworks() (medfl.netmanager.network.network static method)": [[4, "Medfl.NetManager.network.Network.list_allnetworks"]], "list_allnodes() (medfl.netmanager.network.network method)": [[4, "Medfl.NetManager.network.Network.list_allnodes"]], "list_allnodes() (medfl.netmanager.node.node static method)": [[4, "Medfl.NetManager.node.Node.list_allnodes"]], "list_allsetups() (medfl.netmanager.flsetup.flsetup static method)": [[4, "Medfl.NetManager.flsetup.FLsetup.list_allsetups"]], "master_table_exists() (in module medfl.netmanager.net_helper)": [[4, "Medfl.NetManager.net_helper.master_table_exists"]], "mtable_exists (medfl.netmanager.network.network attribute)": [[4, "Medfl.NetManager.network.Network.mtable_exists"]], "name (medfl.netmanager.network.network attribute)": [[4, "Medfl.NetManager.network.Network.name"]], "name (medfl.netmanager.node.node attribute)": [[4, "Medfl.NetManager.node.Node.name"]], "process_data_after_reading() (in module medfl.netmanager.net_helper)": [[4, "Medfl.NetManager.net_helper.process_data_after_reading"]], "process_eicu() (in module medfl.netmanager.net_helper)": [[4, "Medfl.NetManager.net_helper.process_eicu"]], "read_setup() (medfl.netmanager.flsetup.flsetup class method)": [[4, "Medfl.NetManager.flsetup.FLsetup.read_setup"]], "test_fraction (medfl.netmanager.node.node attribute)": [[4, "Medfl.NetManager.node.Node.test_fraction"]], "train (medfl.netmanager.node.node attribute)": [[4, "Medfl.NetManager.node.Node.train"]], "unassign_dataset() (medfl.netmanager.node.node method)": [[4, "Medfl.NetManager.node.Node.unassign_dataset"]], "update_data() (medfl.netmanager.dataset.dataset method)": [[4, "Medfl.NetManager.dataset.DataSet.update_data"]], "update_network() (medfl.netmanager.network.network method)": [[4, "Medfl.NetManager.network.Network.update_network"]], "update_node() (medfl.netmanager.node.node method)": [[4, "Medfl.NetManager.node.Node.update_node"]], "upload_dataset() (medfl.netmanager.dataset.dataset method)": [[4, "Medfl.NetManager.dataset.DataSet.upload_dataset"]], "upload_dataset() (medfl.netmanager.node.node method)": [[4, "Medfl.NetManager.node.Node.upload_dataset"]], "use_network() (medfl.netmanager.network.network method)": [[4, "Medfl.NetManager.network.Network.use_network"]], "validate() (medfl.netmanager.dataset.dataset method)": [[4, "Medfl.NetManager.dataset.DataSet.validate"]], "validate() (medfl.netmanager.flsetup.flsetup method)": [[4, "Medfl.NetManager.flsetup.FLsetup.validate"]], "validate() (medfl.netmanager.network.network method)": [[4, "Medfl.NetManager.network.Network.validate"]], "validate() (medfl.netmanager.node.node method)": [[4, "Medfl.NetManager.node.Node.validate"]]}})