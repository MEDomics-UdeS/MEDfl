Search.setIndex({"docnames": ["Medfl", "Medfl.LearningManager", "Medfl.NetManager", "index", "modules"], "filenames": ["Medfl.rst", "Medfl.LearningManager.rst", "Medfl.NetManager.rst", "index.rst", "modules.rst"], "titles": ["Medfl package", "Medfl.LearningManager package", "Medfl.NetManager package", "Welcome to medfl-package-docs\u2019s documentation!", "Medfl"], "terms": {"learningmanag": [0, 4], "submodul": [0, 4], "client": [0, 4], "flowercli": [0, 1], "evalu": [0, 1], "fit": [0, 1], "get_paramet": [0, 1], "valid": [0, 1, 2], "dynamicmod": [0, 4], "dynamicmodel": [0, 1], "create_binary_classifi": [0, 1], "create_linear_regressor": [0, 1], "create_model": [0, 1], "create_multiclass_classifi": [0, 1], "federated_dataset": [0, 4], "federateddataset": [0, 1, 2], "__init__": [0, 1, 2], "creat": [0, 1, 2], "updat": [0, 1, 2], "flpipelin": [0, 4], "name": [0, 1, 2], "descript": [0, 1, 2], "server": [0, 4], "delet": [0, 1, 2], "auto_test": [0, 1], "test_by_nod": [0, 1], "create_queri": [0, 1], "model": [0, 4], "optim": [0, 1], "criterion": [0, 1], "train": [0, 1, 2], "load_model": [0, 1], "save_model": [0, 1], "set_paramet": [0, 1], "plot": [0, 4], "accuracylossplott": [0, 1], "plot_accuracy_loss": [0, 1], "plot_classification_report": [0, 1], "plot_confusion_matrix_by_nod": [0, 1], "plot_global_confusion_matrix": [0, 1], "results_dict": [0, 1], "flowerserv": [0, 1], "global_model": [0, 1], "strategi": [0, 4], "num_round": [0, 1], "num_client": [0, 1], "fed_dataset": [0, 1], "diff_priv": [0, 1], "accuraci": [0, 1], "loss": [0, 1], "flower_cli": [0, 1], "client_fn": [0, 1], "run": [0, 1], "fraction_fit": [0, 1], "fraction_evalu": [0, 1], "min_fit_cli": [0, 1], "min_evaluate_cli": [0, 1], "min_available_cli": [0, 1], "util": [0, 4], "custom_classification_report": [0, 1], "empty_db": [0, 1], "get_node_confusion_matrix": [0, 1], "get_pipeline_confusion_matrix": [0, 1], "get_pipeline_from_nam": [0, 1], "get_pipeline_result": [0, 1], "test": [0, 1, 2], "netmanag": [0, 4], "dataset": [0, 1, 4], "delete_dataset": [0, 2], "list_alldataset": [0, 2], "update_data": [0, 2], "upload_dataset": [0, 2], "flsetup": [0, 1, 4], "create_dataloader_from_nod": [0, 2], "create_federated_dataset": [0, 2], "create_nodes_from_master_dataset": [0, 2], "get_fldataset": [0, 2], "list_allsetup": [0, 2], "read_setup": [0, 2], "net_help": [0, 4], "get_feddataset_id_from_nam": [0, 2], "get_flpipeline_from_nam": [0, 2], "get_flsetupid_from_nam": [0, 2], "get_netid_from_nam": [0, 2], "get_nodeid_from_nam": [0, 2], "is_str": [0, 2], "master_table_exist": [0, 2], "process_data_after_read": [0, 2], "process_eicu": [0, 2], "net_manager_queri": [0, 4], "network": [0, 1, 4], "mtable_exist": [0, 2], "add_nod": [0, 2], "create_master_dataset": [0, 2], "create_network": [0, 2], "delete_network": [0, 2], "list_allnetwork": [0, 2], "list_allnod": [0, 2], "update_network": [0, 2], "use_network": [0, 2], "node": [0, 1, 4], "test_fract": [0, 2], "assign_dataset": [0, 2], "check_dataset_compat": [0, 2], "create_nod": [0, 2], "delete_nod": [0, 2], "get_dataset": [0, 2], "unassign_dataset": [0, 2], "update_nod": [0, 2], "class": [1, 2], "cid": 1, "str": [1, 2], "local_model": 1, "trainload": 1, "dataload": [1, 2], "valload": 1, "bool": 1, "true": 1, "sourc": [1, 2], "base": [1, 2], "numpycli": 1, "paramet": [1, 2], "config": 1, "provid": 1, "us": [1, 2], "local": 1, "held": 1, "ndarrai": 1, "The": [1, 2], "current": 1, "global": 1, "dict": [1, 2], "scalar": 1, "configur": 1, "which": [1, 2], "allow": 1, "influenc": 1, "It": 1, "can": 1, "commun": 1, "arbitrari": 1, "valu": [1, 2], "from": [1, 2], "exampl": 1, "number": 1, "return": [1, 2], "float": [1, 2], "num_exampl": 1, "int": [1, 2], "metric": 1, "A": [1, 2], "dictionari": [1, 2], "map": 1, "string": [1, 2], "kei": 1, "type": [1, 2], "byte": 1, "back": 1, "previou": 1, "format": 1, "extend": 1, "have": 1, "been": 1, "deprec": 1, "remov": 1, "sinc": 1, "flower": 1, "0": [1, 2], "19": 1, "set": 1, "epoch": 1, "request": 1, "thi": 1, "tell": 1, "ar": 1, "need": 1, "along": 1, "some": 1, "attribut": [1, 2], "list": [1, 2], "numpi": 1, "object": [1, 2], "static": [1, 2], "input_dim": 1, "hidden_dim": 1, "output_dim": 1, "self": [1, 2], "model_typ": 1, "specif": 1, "dynam": 1, "given": [1, 2], "binari": 1, "classifi": 1, "multiclass": 1, "linear": 1, "regressor": 1, "dimens": 1, "input": 1, "data": [1, 2], "hidden": 1, "layer": 1, "output": [1, 2], "pytorch": 1, "nn": 1, "train_nod": [1, 2], "test_nod": [1, 2], "testload": 1, "repres": [1, 2], "feder": [1, 2], "loader": 1, "flsetupid": [1, 2], "new": [1, 2], "databas": [1, 2], "id": [1, 2], "associ": [1, 2], "flpipeid": 1, "fedid": 1, "flpipe": 1, "manag": 1, "learn": [1, 2], "pipelin": 1, "none": [1, 2], "initi": [1, 2], "specifi": [1, 2], "result": 1, "entri": 1, "placehold": 1, "method": [1, 2], "implement": [1, 2], "node_nam": 1, "test_frac": [1, 2], "1": [1, 2], "automat": 1, "all": [1, 2], "option": [1, 2], "fraction": [1, 2], "default": [1, 2], "i": [1, 2], "contain": [1, 2], "classif": 1, "report": 1, "store": 1, "its": 1, "note": [1, 2], "your": 1, "setup": [1, 2], "rais": [1, 2], "typeerror": [1, 2], "If": [1, 2], "creation_d": 1, "callabl": 1, "neural": 1, "torch": 1, "function": 1, "np": 1, "get": [1, 2], "arrai": 1, "train_load": 1, "devic": 1, "privacy_engin": 1, "fals": 1, "one": 1, "val_load": 1, "cpu": 1, "tupl": 1, "perform": 1, "model_nam": 1, "privaci": 1, "engin": [1, 2], "differenti": 1, "enabl": 1, "whether": [1, 2], "epsilon": 1, "pipeline_nam": 1, "lr": 1, "001": 1, "adam": 1, "85": 1, "89": 1, "92": 1, "94": 1, "ellipsi": 1, "2": [1, 2], "15": 1, "08": 1, "01": 1, "sgd": 1, "88": 1, "91": 1, "93": 1, "95": 1, "18": 1, "13": 1, "09": 1, "07": 1, "82": 1, "87": 1, "25": 1, "12": 1, "should": 1, "len": 1, "num": 1, "round": 1, "delta": 1, "common": 1, "thing": 1, "aggreg": 1, "diff_privaci": 1, "client_resourc": 1, "num_cpu": 1, "num_gpu": 1, "central": 1, "among": 1, "particip": 1, "process": 1, "dure": 1, "each": 1, "individu": 1, "server_round": 1, "fl": [1, 2], "simul": 1, "ani": 1, "dtype": 1, "fedavg": 1, "minimum": 1, "avail": 1, "requir": 1, "start": 1, "y_true": 1, "y_pred": 1, "pipeline_id": 1, "test_load": 1, "path": 2, "file": 2, "csv": 2, "assum": 2, "uniqu": 2, "tabl": 2, "datafram": 2, "pd": 2, "Not": 2, "yet": 2, "nodeid": 2, "upload": 2, "an": 2, "instanc": 2, "architectur": 2, "fill_strategi": 2, "mean": 2, "fit_encod": 2, "to_drop": 2, "train_batch_s": 2, "32": 2, "test_batch_s": 2, "split_frac": 2, "batch": 2, "size": 2, "read": 2, "val_frac": 2, "featur": 2, "params_dict": 2, "master": 2, "creation": 2, "column_nam": 2, "column": 2, "masterdataset": 2, "inform": 2, "about": 2, "classmethod": 2, "data_df": 2, "row": 2, "x": 2, "integ": 2, "flag": 2, "indic": 2, "exist": 2, "add": 2, "path_to_csv": 2, "d": 2, "esi": 2, "3c": 2, "pfe": 2, "last_year": 2, "code": 2, "notebook": 2, "sapsii_score_knnimputed_eicu": 2, "insert": 2, "": 2, "network_nam": 2, "sqlalchemi": 2, "connect": 2, "when": 2, "dataset_nam": 2, "assign": 2, "check": 2, "compat": 2, "netid": 2, "unssign": 2, "eicu_test": 2, "index": 3, "modul": [3, 4], "search": 3, "page": 3, "packag": 4, "subpackag": 4, "content": 4, "No": []}, "objects": {"": [[0, 0, 0, "-", "Medfl"]], "Medfl": [[1, 0, 0, "-", "LearningManager"], [2, 0, 0, "-", "NetManager"]], "Medfl.LearningManager": [[1, 0, 0, "-", "client"], [1, 0, 0, "-", "dynamicModal"], [1, 0, 0, "-", "federated_dataset"], [1, 0, 0, "-", "flpipeline"], [1, 0, 0, "-", "model"], [1, 0, 0, "-", "plot"], [1, 0, 0, "-", "server"], [1, 0, 0, "-", "strategy"], [1, 0, 0, "-", "utils"]], "Medfl.LearningManager.client": [[1, 1, 1, "", "FlowerClient"]], "Medfl.LearningManager.client.FlowerClient": [[1, 2, 1, "", "evaluate"], [1, 2, 1, "", "fit"], [1, 2, 1, "", "get_parameters"], [1, 2, 1, "", "validate"]], "Medfl.LearningManager.dynamicModal": [[1, 1, 1, "", "DynamicModel"]], "Medfl.LearningManager.dynamicModal.DynamicModel": [[1, 2, 1, "", "create_binary_classifier"], [1, 2, 1, "", "create_linear_regressor"], [1, 2, 1, "", "create_model"], [1, 2, 1, "", "create_multiclass_classifier"]], "Medfl.LearningManager.federated_dataset": [[1, 1, 1, "", "FederatedDataset"]], "Medfl.LearningManager.federated_dataset.FederatedDataset": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "create"], [1, 2, 1, "", "update"]], "Medfl.LearningManager.flpipeline": [[1, 1, 1, "", "FLpipeline"], [1, 4, 1, "", "create_query"]], "Medfl.LearningManager.flpipeline.FLpipeline": [[1, 2, 1, "", "auto_test"], [1, 2, 1, "", "create"], [1, 2, 1, "", "delete"], [1, 3, 1, "", "description"], [1, 3, 1, "", "name"], [1, 3, 1, "", "server"], [1, 2, 1, "", "test_by_node"], [1, 2, 1, "", "validate"]], "Medfl.LearningManager.model": [[1, 1, 1, "", "Model"]], "Medfl.LearningManager.model.Model": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "create_binary_classifier"], [1, 2, 1, "", "create_linear_regressor"], [1, 2, 1, "", "create_model"], [1, 2, 1, "", "create_multiclass_classifier"], [1, 3, 1, "", "criterion"], [1, 2, 1, "", "evaluate"], [1, 2, 1, "", "get_parameters"], [1, 2, 1, "", "load_model"], [1, 3, 1, "", "model"], [1, 3, 1, "", "optimizer"], [1, 2, 1, "", "save_model"], [1, 2, 1, "", "set_parameters"], [1, 2, 1, "", "train"], [1, 2, 1, "", "validate"]], "Medfl.LearningManager.plot": [[1, 1, 1, "", "AccuracyLossPlotter"], [1, 5, 1, "", "results_dict"]], "Medfl.LearningManager.plot.AccuracyLossPlotter": [[1, 2, 1, "", "plot_accuracy_loss"], [1, 2, 1, "", "plot_classification_report"], [1, 2, 1, "", "plot_confusion_Matrix_by_node"], [1, 2, 1, "", "plot_global_confusion_matrix"]], "Medfl.LearningManager.server": [[1, 1, 1, "", "FlowerServer"]], "Medfl.LearningManager.server.FlowerServer": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "accuracies"], [1, 2, 1, "", "client_fn"], [1, 3, 1, "", "diff_priv"], [1, 2, 1, "", "evaluate"], [1, 3, 1, "", "fed_dataset"], [1, 3, 1, "", "flower_clients"], [1, 3, 1, "", "global_model"], [1, 3, 1, "", "losses"], [1, 3, 1, "", "num_clients"], [1, 3, 1, "", "num_rounds"], [1, 2, 1, "", "run"], [1, 3, 1, "", "strategy"], [1, 2, 1, "", "validate"]], "Medfl.LearningManager.strategy": [[1, 1, 1, "", "Strategy"]], "Medfl.LearningManager.strategy.Strategy": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "fraction_evaluate"], [1, 3, 1, "", "fraction_fit"], [1, 3, 1, "", "min_available_clients"], [1, 3, 1, "", "min_evaluate_clients"], [1, 3, 1, "", "min_fit_clients"], [1, 3, 1, "", "name"]], "Medfl.LearningManager.utils": [[1, 4, 1, "", "custom_classification_report"], [1, 4, 1, "", "empty_db"], [1, 4, 1, "", "get_node_confusion_matrix"], [1, 4, 1, "", "get_pipeline_confusion_matrix"], [1, 4, 1, "", "get_pipeline_from_name"], [1, 4, 1, "", "get_pipeline_result"], [1, 4, 1, "", "test"]], "Medfl.NetManager": [[2, 0, 0, "-", "dataset"], [2, 0, 0, "-", "flsetup"], [2, 0, 0, "-", "net_helper"], [2, 0, 0, "-", "net_manager_queries"], [2, 0, 0, "-", "network"], [2, 0, 0, "-", "node"]], "Medfl.NetManager.dataset": [[2, 1, 1, "", "DataSet"]], "Medfl.NetManager.dataset.DataSet": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "delete_dataset"], [2, 2, 1, "", "list_alldatasets"], [2, 2, 1, "", "update_data"], [2, 2, 1, "", "upload_dataset"], [2, 2, 1, "", "validate"]], "Medfl.NetManager.flsetup": [[2, 1, 1, "", "FLsetup"]], "Medfl.NetManager.flsetup.FLsetup": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "create"], [2, 2, 1, "", "create_dataloader_from_node"], [2, 2, 1, "", "create_federated_dataset"], [2, 2, 1, "", "create_nodes_from_master_dataset"], [2, 2, 1, "", "delete"], [2, 2, 1, "", "get_flDataSet"], [2, 2, 1, "", "list_allsetups"], [2, 2, 1, "", "read_setup"], [2, 2, 1, "", "validate"]], "Medfl.NetManager.net_helper": [[2, 4, 1, "", "get_feddataset_id_from_name"], [2, 4, 1, "", "get_flpipeline_from_name"], [2, 4, 1, "", "get_flsetupid_from_name"], [2, 4, 1, "", "get_netid_from_name"], [2, 4, 1, "", "get_nodeid_from_name"], [2, 4, 1, "", "is_str"], [2, 4, 1, "", "master_table_exists"], [2, 4, 1, "", "process_data_after_reading"], [2, 4, 1, "", "process_eicu"]], "Medfl.NetManager.network": [[2, 1, 1, "", "Network"]], "Medfl.NetManager.network.Network": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "add_node"], [2, 2, 1, "", "create_master_dataset"], [2, 2, 1, "", "create_network"], [2, 2, 1, "", "delete_network"], [2, 2, 1, "", "list_allnetworks"], [2, 2, 1, "", "list_allnodes"], [2, 3, 1, "", "mtable_exists"], [2, 3, 1, "", "name"], [2, 2, 1, "", "update_network"], [2, 2, 1, "", "use_network"], [2, 2, 1, "", "validate"]], "Medfl.NetManager.node": [[2, 1, 1, "", "Node"]], "Medfl.NetManager.node.Node": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "assign_dataset"], [2, 2, 1, "", "check_dataset_compatibility"], [2, 2, 1, "", "create_node"], [2, 2, 1, "", "delete_node"], [2, 2, 1, "", "get_dataset"], [2, 2, 1, "", "list_alldatasets"], [2, 2, 1, "", "list_allnodes"], [2, 3, 1, "", "name"], [2, 3, 1, "", "test_fraction"], [2, 3, 1, "", "train"], [2, 2, 1, "", "unassign_dataset"], [2, 2, 1, "", "update_node"], [2, 2, 1, "", "upload_dataset"], [2, 2, 1, "", "validate"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"]}, "titleterms": {"medfl": [0, 1, 2, 3, 4], "packag": [0, 1, 2, 3], "subpackag": 0, "modul": [0, 1, 2], "content": [0, 1, 2, 3], "learningmanag": 1, "submodul": [1, 2], "client": 1, "dynamicmod": 1, "federated_dataset": 1, "flpipelin": 1, "model": 1, "plot": 1, "server": 1, "strategi": 1, "util": 1, "netmanag": 2, "dataset": 2, "flsetup": 2, "net_help": 2, "net_manager_queri": 2, "network": 2, "node": 2, "welcom": 3, "doc": 3, "": 3, "document": 3, "indic": 3, "tabl": 3}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Medfl package": [[0, "medfl-package"]], "Subpackages": [[0, "subpackages"]], "Module contents": [[0, "module-Medfl"], [2, "module-Medfl.NetManager"], [1, "module-Medfl.LearningManager"]], "Submodules": [[2, "submodules"], [1, "submodules"]], "Medfl.NetManager package": [[2, "medfl-netmanager-package"]], "Medfl.NetManager.dataset module": [[2, "module-Medfl.NetManager.dataset"]], "Medfl.NetManager.flsetup module": [[2, "module-Medfl.NetManager.flsetup"]], "Medfl.NetManager.net_helper module": [[2, "module-Medfl.NetManager.net_helper"]], "Medfl.NetManager.net_manager_queries module": [[2, "module-Medfl.NetManager.net_manager_queries"]], "Medfl.NetManager.network module": [[2, "module-Medfl.NetManager.network"]], "Medfl.NetManager.node module": [[2, "module-Medfl.NetManager.node"]], "Welcome to medfl-package-docs\u2019s documentation!": [[3, "welcome-to-medfl-package-docs-s-documentation"]], "Contents:": [[3, null]], "Indices and tables": [[3, "indices-and-tables"]], "Medfl": [[4, "medfl"]], "Medfl.LearningManager package": [[1, "medfl-learningmanager-package"]], "Medfl.LearningManager.client module": [[1, "module-Medfl.LearningManager.client"]], "Medfl.LearningManager.dynamicModal module": [[1, "module-Medfl.LearningManager.dynamicModal"]], "Medfl.LearningManager.federated_dataset module": [[1, "module-Medfl.LearningManager.federated_dataset"]], "Medfl.LearningManager.flpipeline module": [[1, "module-Medfl.LearningManager.flpipeline"]], "Medfl.LearningManager.model module": [[1, "module-Medfl.LearningManager.model"]], "Medfl.LearningManager.plot module": [[1, "module-Medfl.LearningManager.plot"]], "Medfl.LearningManager.server module": [[1, "module-Medfl.LearningManager.server"]], "Medfl.LearningManager.strategy module": [[1, "module-Medfl.LearningManager.strategy"]], "Medfl.LearningManager.utils module": [[1, "module-Medfl.LearningManager.utils"]]}, "indexentries": {"medfl": [[0, "module-Medfl"]], "module": [[0, "module-Medfl"], [1, "module-Medfl.LearningManager"], [1, "module-Medfl.LearningManager.client"], [1, "module-Medfl.LearningManager.dynamicModal"], [1, "module-Medfl.LearningManager.federated_dataset"], [1, "module-Medfl.LearningManager.flpipeline"], [1, "module-Medfl.LearningManager.model"], [1, "module-Medfl.LearningManager.plot"], [1, "module-Medfl.LearningManager.server"], [1, "module-Medfl.LearningManager.strategy"], [1, "module-Medfl.LearningManager.utils"]], "accuracylossplotter (class in medfl.learningmanager.plot)": [[1, "Medfl.LearningManager.plot.AccuracyLossPlotter"]], "dynamicmodel (class in medfl.learningmanager.dynamicmodal)": [[1, "Medfl.LearningManager.dynamicModal.DynamicModel"]], "flpipeline (class in medfl.learningmanager.flpipeline)": [[1, "Medfl.LearningManager.flpipeline.FLpipeline"]], "federateddataset (class in medfl.learningmanager.federated_dataset)": [[1, "Medfl.LearningManager.federated_dataset.FederatedDataset"]], "flowerclient (class in medfl.learningmanager.client)": [[1, "Medfl.LearningManager.client.FlowerClient"]], "flowerserver (class in medfl.learningmanager.server)": [[1, "Medfl.LearningManager.server.FlowerServer"]], "medfl.learningmanager": [[1, "module-Medfl.LearningManager"]], "medfl.learningmanager.client": [[1, "module-Medfl.LearningManager.client"]], "medfl.learningmanager.dynamicmodal": [[1, "module-Medfl.LearningManager.dynamicModal"]], "medfl.learningmanager.federated_dataset": [[1, "module-Medfl.LearningManager.federated_dataset"]], "medfl.learningmanager.flpipeline": [[1, "module-Medfl.LearningManager.flpipeline"]], "medfl.learningmanager.model": [[1, "module-Medfl.LearningManager.model"]], "medfl.learningmanager.plot": [[1, "module-Medfl.LearningManager.plot"]], "medfl.learningmanager.server": [[1, "module-Medfl.LearningManager.server"]], "medfl.learningmanager.strategy": [[1, "module-Medfl.LearningManager.strategy"]], "medfl.learningmanager.utils": [[1, "module-Medfl.LearningManager.utils"]], "model (class in medfl.learningmanager.model)": [[1, "Medfl.LearningManager.model.Model"]], "strategy (class in medfl.learningmanager.strategy)": [[1, "Medfl.LearningManager.strategy.Strategy"]], "__init__() (medfl.learningmanager.federated_dataset.federateddataset method)": [[1, "Medfl.LearningManager.federated_dataset.FederatedDataset.__init__"]], "__init__() (medfl.learningmanager.model.model method)": [[1, "Medfl.LearningManager.model.Model.__init__"]], "__init__() (medfl.learningmanager.server.flowerserver method)": [[1, "Medfl.LearningManager.server.FlowerServer.__init__"]], "__init__() (medfl.learningmanager.strategy.strategy method)": [[1, "Medfl.LearningManager.strategy.Strategy.__init__"]], "accuracies (medfl.learningmanager.server.flowerserver attribute)": [[1, "Medfl.LearningManager.server.FlowerServer.accuracies"]], "auto_test() (medfl.learningmanager.flpipeline.flpipeline method)": [[1, "Medfl.LearningManager.flpipeline.FLpipeline.auto_test"]], "client_fn() (medfl.learningmanager.server.flowerserver method)": [[1, "Medfl.LearningManager.server.FlowerServer.client_fn"]], "create() (medfl.learningmanager.federated_dataset.federateddataset method)": [[1, "Medfl.LearningManager.federated_dataset.FederatedDataset.create"]], "create() (medfl.learningmanager.flpipeline.flpipeline method)": [[1, "Medfl.LearningManager.flpipeline.FLpipeline.create"]], "create_binary_classifier() (medfl.learningmanager.dynamicmodal.dynamicmodel static method)": [[1, "Medfl.LearningManager.dynamicModal.DynamicModel.create_binary_classifier"]], "create_binary_classifier() (medfl.learningmanager.model.model method)": [[1, "Medfl.LearningManager.model.Model.create_binary_classifier"]], "create_linear_regressor() (medfl.learningmanager.dynamicmodal.dynamicmodel static method)": [[1, "Medfl.LearningManager.dynamicModal.DynamicModel.create_linear_regressor"]], "create_linear_regressor() (medfl.learningmanager.model.model method)": [[1, "Medfl.LearningManager.model.Model.create_linear_regressor"]], "create_model() (medfl.learningmanager.dynamicmodal.dynamicmodel method)": [[1, "Medfl.LearningManager.dynamicModal.DynamicModel.create_model"]], "create_model() (medfl.learningmanager.model.model method)": [[1, "Medfl.LearningManager.model.Model.create_model"]], "create_multiclass_classifier() (medfl.learningmanager.dynamicmodal.dynamicmodel static method)": [[1, "Medfl.LearningManager.dynamicModal.DynamicModel.create_multiclass_classifier"]], "create_multiclass_classifier() (medfl.learningmanager.model.model method)": [[1, "Medfl.LearningManager.model.Model.create_multiclass_classifier"]], "create_query() (in module medfl.learningmanager.flpipeline)": [[1, "Medfl.LearningManager.flpipeline.create_query"]], "criterion (medfl.learningmanager.model.model attribute)": [[1, "Medfl.LearningManager.model.Model.criterion"]], "custom_classification_report() (in module medfl.learningmanager.utils)": [[1, "Medfl.LearningManager.utils.custom_classification_report"]], "delete() (medfl.learningmanager.flpipeline.flpipeline method)": [[1, "Medfl.LearningManager.flpipeline.FLpipeline.delete"]], "description (medfl.learningmanager.flpipeline.flpipeline attribute)": [[1, "Medfl.LearningManager.flpipeline.FLpipeline.description"]], "diff_priv (medfl.learningmanager.server.flowerserver attribute)": [[1, "Medfl.LearningManager.server.FlowerServer.diff_priv"]], "empty_db() (in module medfl.learningmanager.utils)": [[1, "Medfl.LearningManager.utils.empty_db"]], "evaluate() (medfl.learningmanager.client.flowerclient method)": [[1, "Medfl.LearningManager.client.FlowerClient.evaluate"]], "evaluate() (medfl.learningmanager.model.model method)": [[1, "Medfl.LearningManager.model.Model.evaluate"]], "evaluate() (medfl.learningmanager.server.flowerserver method)": [[1, "Medfl.LearningManager.server.FlowerServer.evaluate"]], "fed_dataset (medfl.learningmanager.server.flowerserver attribute)": [[1, "Medfl.LearningManager.server.FlowerServer.fed_dataset"]], "fit() (medfl.learningmanager.client.flowerclient method)": [[1, "Medfl.LearningManager.client.FlowerClient.fit"]], "flower_clients (medfl.learningmanager.server.flowerserver attribute)": [[1, "Medfl.LearningManager.server.FlowerServer.flower_clients"]], "fraction_evaluate (medfl.learningmanager.strategy.strategy attribute)": [[1, "Medfl.LearningManager.strategy.Strategy.fraction_evaluate"]], "fraction_fit (medfl.learningmanager.strategy.strategy attribute)": [[1, "Medfl.LearningManager.strategy.Strategy.fraction_fit"]], "get_node_confusion_matrix() (in module medfl.learningmanager.utils)": [[1, "Medfl.LearningManager.utils.get_node_confusion_matrix"]], "get_parameters() (medfl.learningmanager.client.flowerclient method)": [[1, "Medfl.LearningManager.client.FlowerClient.get_parameters"]], "get_parameters() (medfl.learningmanager.model.model method)": [[1, "Medfl.LearningManager.model.Model.get_parameters"]], "get_pipeline_confusion_matrix() (in module medfl.learningmanager.utils)": [[1, "Medfl.LearningManager.utils.get_pipeline_confusion_matrix"]], "get_pipeline_from_name() (in module medfl.learningmanager.utils)": [[1, "Medfl.LearningManager.utils.get_pipeline_from_name"]], "get_pipeline_result() (in module medfl.learningmanager.utils)": [[1, "Medfl.LearningManager.utils.get_pipeline_result"]], "global_model (medfl.learningmanager.server.flowerserver attribute)": [[1, "Medfl.LearningManager.server.FlowerServer.global_model"]], "load_model() (medfl.learningmanager.model.model static method)": [[1, "Medfl.LearningManager.model.Model.load_model"]], "losses (medfl.learningmanager.server.flowerserver attribute)": [[1, "Medfl.LearningManager.server.FlowerServer.losses"]], "min_available_clients (medfl.learningmanager.strategy.strategy attribute)": [[1, "Medfl.LearningManager.strategy.Strategy.min_available_clients"]], "min_evaluate_clients (medfl.learningmanager.strategy.strategy attribute)": [[1, "Medfl.LearningManager.strategy.Strategy.min_evaluate_clients"]], "min_fit_clients (medfl.learningmanager.strategy.strategy attribute)": [[1, "Medfl.LearningManager.strategy.Strategy.min_fit_clients"]], "model (medfl.learningmanager.model.model attribute)": [[1, "Medfl.LearningManager.model.Model.model"]], "name (medfl.learningmanager.flpipeline.flpipeline attribute)": [[1, "Medfl.LearningManager.flpipeline.FLpipeline.name"]], "name (medfl.learningmanager.strategy.strategy attribute)": [[1, "Medfl.LearningManager.strategy.Strategy.name"]], "num_clients (medfl.learningmanager.server.flowerserver attribute)": [[1, "Medfl.LearningManager.server.FlowerServer.num_clients"]], "num_rounds (medfl.learningmanager.server.flowerserver attribute)": [[1, "Medfl.LearningManager.server.FlowerServer.num_rounds"]], "optimizer (medfl.learningmanager.model.model attribute)": [[1, "Medfl.LearningManager.model.Model.optimizer"]], "plot_accuracy_loss() (medfl.learningmanager.plot.accuracylossplotter method)": [[1, "Medfl.LearningManager.plot.AccuracyLossPlotter.plot_accuracy_loss"]], "plot_classification_report() (medfl.learningmanager.plot.accuracylossplotter static method)": [[1, "Medfl.LearningManager.plot.AccuracyLossPlotter.plot_classification_report"]], "plot_confusion_matrix_by_node() (medfl.learningmanager.plot.accuracylossplotter static method)": [[1, "Medfl.LearningManager.plot.AccuracyLossPlotter.plot_confusion_Matrix_by_node"]], "plot_global_confusion_matrix() (medfl.learningmanager.plot.accuracylossplotter static method)": [[1, "Medfl.LearningManager.plot.AccuracyLossPlotter.plot_global_confusion_matrix"]], "results_dict (in module medfl.learningmanager.plot)": [[1, "Medfl.LearningManager.plot.results_dict"]], "run() (medfl.learningmanager.server.flowerserver method)": [[1, "Medfl.LearningManager.server.FlowerServer.run"]], "save_model() (medfl.learningmanager.model.model static method)": [[1, "Medfl.LearningManager.model.Model.save_model"]], "server (medfl.learningmanager.flpipeline.flpipeline attribute)": [[1, "Medfl.LearningManager.flpipeline.FLpipeline.server"]], "set_parameters() (medfl.learningmanager.model.model method)": [[1, "Medfl.LearningManager.model.Model.set_parameters"]], "strategy (medfl.learningmanager.server.flowerserver attribute)": [[1, "Medfl.LearningManager.server.FlowerServer.strategy"]], "test() (in module medfl.learningmanager.utils)": [[1, "Medfl.LearningManager.utils.test"]], "test_by_node() (medfl.learningmanager.flpipeline.flpipeline method)": [[1, "Medfl.LearningManager.flpipeline.FLpipeline.test_by_node"]], "train() (medfl.learningmanager.model.model method)": [[1, "Medfl.LearningManager.model.Model.train"]], "update() (medfl.learningmanager.federated_dataset.federateddataset method)": [[1, "Medfl.LearningManager.federated_dataset.FederatedDataset.update"]], "validate() (medfl.learningmanager.client.flowerclient method)": [[1, "Medfl.LearningManager.client.FlowerClient.validate"]], "validate() (medfl.learningmanager.flpipeline.flpipeline method)": [[1, "Medfl.LearningManager.flpipeline.FLpipeline.validate"]], "validate() (medfl.learningmanager.model.model method)": [[1, "Medfl.LearningManager.model.Model.validate"]], "validate() (medfl.learningmanager.server.flowerserver method)": [[1, "Medfl.LearningManager.server.FlowerServer.validate"]]}})